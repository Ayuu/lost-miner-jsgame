function defaults(b,c){return b===void 0||null===b?c:b}function clamp(b,c,d){return b<=c?c:b>=d?d:b}function hexToRgba(b,c){var d=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(b);return d?`rgba(${parseInt(d[1],16)}, ${parseInt(d[2],16)}, ${parseInt(d[3],16)}, ${c})`:null}function tileComparator(b,c){if(b.x<c.x){if(b.y<c.y)return-4;return b.y===c.y?-3:-2}return b.x===c.x?b.y<c.y?-1:b.y===c.y?0:1:b.y<c.y?2:b.y===c.y?3:4}class Random{constructor(b){this.m=2147483648,this.a=1103515245,this.c=12345,this.state=b?b:Math.floor(Math.random()*(this.m-1))}next(){return this.nextInt()/(this.m-1)}nextInt(){return this.state=(this.a*this.state+this.c)%this.m,this.state}nextRange(b,c){var f=this.nextInt()/this.m;return b+Math.floor(f*(c-b))}}let map=new WeakMap,internal=function(b){return map.has(b)||map.set(b,{}),map.get(b)};const random=new Random(42),DIR={LEFT:'LEFT',RIGHT:'RIGHT',TOP:'TOP',BOTTOM:'BOTTOM'},TILE_TYPE={EMPTY:'',WALL:'WALL',ORE:'ORE',EXIT:'EXIT'};function ComponentException(b){this.toString=function(){return b}}const ROOM_MIN_SIZE=2;class Room{constructor({x:b,y:c,width:d,height:f}){this.x=b,this.y=c,this.width=d,this.height=f}createPath(b,c,d,f,g){g.forEach(j=>{j===DIR.LEFT?this.x=b:j===DIR.RIGHT?this.width=d-(this.x-b):j===DIR.TOP?this.y=c:j===DIR.BOTTOM?this.height=f-(this.y-c):void 0}),this.sizeX=this.x+this.width,this.sizeY=this.y+this.height}}class Leaf{constructor(b,c,d,f,g){this.x=b,this.y=c,this.width=d,this.height=f,this.color=`#${Math.floor(16777215*random.next()).toString(16)}`,this.directions=new Set(g?[...g]:[]),this.room=null}generateCoords(b,c,d){for(var f=this.x;f<this.x+this.width;f++)for(var g=this.y;g<this.y+this.height;g++)if(this.room.x<=f&&f<this.room.sizeX&&this.room.y<=g&&g<this.room.sizeY){const j=random.nextRange(0,2),k=1===j?TILE_TYPE.ORE:TILE_TYPE.EMPTY;c[f+g*d]={x:f,y:g,type:k}}else c[f+g*d]={x:f,y:g,type:TILE_TYPE.WALL}}}class MazeGenerator{constructor(b,c,d,f,g){this.leaves=[new Leaf(b,c,d,f)],this.ctx=g.context,this.map=Array(d*f),this.width=d,this.height=f}startGenerate(b){var c;this.map.length=0;do c=!1,this.leaves.forEach(d=>{const{x:f,y:g,width:j,height:k}=d;var l=!0;if(l=!(1.25*j>k)&&(!!(1.25*k>j)||1===random.nextRange(0,2)),l){if(g+ROOM_MIN_SIZE<k-ROOM_MIN_SIZE){const m=random.nextRange(g+ROOM_MIN_SIZE,k-ROOM_MIN_SIZE);d.height=m;const n=new Leaf(f,g+m,j,k-m,[DIR.TOP,...d.directions]);d.directions.add(DIR.BOTTOM),this.leaves.push(n),c=!0}}else if(f+ROOM_MIN_SIZE<j-ROOM_MIN_SIZE){const m=random.nextRange(f+ROOM_MIN_SIZE,j-ROOM_MIN_SIZE);d.width=m;const n=new Leaf(f+m,g,j-m,k,[DIR.LEFT,...d.directions]);d.directions.add(DIR.RIGHT),this.leaves.push(n),c=!0}});while(c);this.leaves.sort(tileComparator),this.createRooms(b)}createRooms(b){this.leaves.forEach(c=>{const d=Math.max(1,Math.floor(random.nextRange(1,100)/100*c.width)),f=Math.max(1,Math.floor(random.nextRange(1,100)/100*c.height));c.room=new Room({width:d,height:f,x:random.nextRange(c.x,c.x+(c.width-d)),y:random.nextRange(c.y,c.y+(c.height-f))}),c.room.createPath(c.x,c.y,c.width,c.height,c.directions),c.generateCoords(b,this.map,this.width)})}paint(){this.leaves.forEach(b=>{const{x:c,y:d,width:f,height:g,color:j,room:k}=b;this.ctx.strokeStyle=j,this.ctx.strokeRect(30*c,30*d,30*f,30*g),this.ctx.fillStyle=hexToRgba(j,0.2),this.ctx.fillRect(30*k.x,30*k.y,30*k.width,30*k.height)})}}class AbstractComponent{constructor(b){if(new.target===AbstractComponent)throw new TypeError('Cannot construct AbstractComponent instances directly');if(!b.container)throw new ComponentException('Required value are missing');this.ctx=b.container.context,this.x=b.x||0,this.y=b.y||0,this.color=b.color||'black'}}class ObjectComponent extends AbstractComponent{constructor(b){if(super(b),!b.width||!b.height)throw new ComponentException('Size are required value');this.width=b.width,this.height=b.height,this.halfWidth=0.5*this.width,this.halfHeight=0.5*this.height,this.centerX=this.x+this.halfWidth,this.centerY=this.y+this.halfHeight,this.sizeY=this.y+this.height,this.sizeX=this.x+this.width}update(){this.ctx.fillStyle=this.color,this.ctx.fillRect(this.x,this.y,this.width,this.height)}}class TextComponent extends AbstractComponent{constructor(b){if(super(b),this.text='',!b.size)throw new ComponentException('Size are required value');this.size=b.size}update(){this.ctx.font=`${this.size} Arial`,this.ctx.fillStyle=this.color,this.ctx.fillText(this.text,this.x,this.y)}}class StarComponent extends ObjectComponent{constructor(b){super(b),this.color=b.color||'#D4AF37',this.sides=b.sides||8,this.halfWidth*=0.8,this.halfHeight*=0.8,this.quarterWidth=0.75*this.halfWidth,this.quarterHeight=0.75*this.halfHeight}update(){this.ctx.strokeStyle='black',this.ctx.fillStyle=this.color,this.ctx.lineWidth=1,this.ctx.beginPath(),this.ctx.moveTo(this.centerX+this.halfWidth*Math.cos(0),this.centerY+this.halfHeight*Math.sin(0)),this.ctx.lineTo(this.centerX+this.quarterWidth*Math.cos(0),this.centerY+this.quarterHeight*Math.sin(0));for(var b=1;b<=this.sides;b+=1)this.ctx.lineTo(this.centerX+this.halfWidth*Math.cos(2*b*Math.PI/this.sides),this.centerY+this.halfHeight*Math.sin(2*b*Math.PI/this.sides)),this.ctx.lineTo(this.centerX+this.quarterWidth*Math.cos(2*b*Math.PI/this.sides),this.centerY+this.quarterHeight*Math.sin(2*b*Math.PI/this.sides));this.ctx.fill(),this.ctx.stroke()}}class OreComponent extends ObjectComponent{constructor(b){super(b),this.color=b.color||'#686868',this.sides=b.sides||8,this.halfWidth*=0.8,this.halfHeight*=0.8,this.quarterWidth=0.75*this.halfWidth,this.quarterHeight=0.75*this.halfHeight}update(){this.ctx.strokeStyle='black',this.ctx.fillStyle=this.color,this.ctx.lineWidth=1,this.ctx.beginPath(),this.ctx.moveTo(this.centerX+this.halfWidth*Math.cos(0),this.centerY+this.halfHeight*Math.sin(0));for(var b=1;b<=this.sides;b+=1)this.ctx.lineTo(this.centerX+this.halfWidth*Math.cos(2*b*Math.PI/this.sides),this.centerY+this.halfHeight*Math.sin(2*b*Math.PI/this.sides));this.ctx.fill(),this.ctx.lineTo(this.centerX+this.quarterWidth*Math.cos(0),this.centerY+this.quarterHeight*Math.sin(0));for(var b=1;b<=this.sides;b+=1)this.ctx.lineTo(this.centerX+this.quarterWidth*Math.cos(2*b*Math.PI/this.sides),this.centerY+this.quarterHeight*Math.sin(2*b*Math.PI/this.sides)),this.ctx.lineTo(this.centerX+this.halfWidth*Math.cos(2*b*Math.PI/this.sides),this.centerY+this.halfHeight*Math.sin(2*b*Math.PI/this.sides)),this.ctx.moveTo(this.centerX+this.quarterWidth*Math.cos(2*b*Math.PI/this.sides),this.centerY+this.quarterHeight*Math.sin(2*b*Math.PI/this.sides));this.ctx.stroke()}}class WallComponent extends ObjectComponent{constructor(b){super(b)}update(){this.ctx.strokeStyle='#000',this.ctx.fillStyle='#C0C0C0',this.ctx.beginPath(),this.ctx.moveTo(this.x,this.y),this.ctx.lineTo(this.x+this.width,this.y),this.ctx.lineTo(this.x,this.y+this.height),this.ctx.fill(),this.ctx.stroke(),this.ctx.fillStyle='#708090',this.ctx.beginPath(),this.ctx.moveTo(this.x+this.width,this.y+this.height),this.ctx.lineTo(this.x+this.width,this.y),this.ctx.lineTo(this.x,this.y+this.height),this.ctx.fill(),this.ctx.stroke()}}class Player extends ObjectComponent{constructor(b){super(b),this.container=b.container,this.dead=!1,this.margin=0.1*this.height,this.headSize=0.1*this.height,this.headMargin=2*this.headSize,this.bodySize=0.35*this.height,this.memberSize=0.2*this.height,this.memberWidth=0.15*this.width,internal(this).progress=0,internal(this).dead=!1,this.setPosition(b)}get progress(){return internal(this).progress}set progress(b){internal(this).progress=b}setPosition({x:b,y:c}){this.x=30*b,this.y=30*c,internal(this).direction=DIR.LEFT,internal(this).speedX=0,internal(this).speedY=0,this.updateBodyPos()}move(b,c){internal(this).speedX=defaults(b,internal(this).speedX),internal(this).speedY=defaults(c,internal(this).speedY),Number.isFinite(b)&&0!==b&&(internal(this).direction=0<b?DIR.RIGHT:DIR.LEFT),Number.isFinite(c)&&0!==c&&(internal(this).direction=0>c?DIR.TOP:DIR.BOTTOM)}action(b,c){var d,f=Math.floor(this.x/30),g=Math.floor(this.y/30);switch(internal(this).direction){case DIR.LEFT:d=b[f-1+g*c];break;case DIR.RIGHT:d=b[f+1+g*c];break;case DIR.TOP:d=b[f+(g-1)*c];break;case DIR.BOTTOM:d=b[f+(g+1)*c];}return d&&d.type===TILE_TYPE.ORE?d:null}endLevel(){internal(this).progress=internal(this).progress+1}win(){return internal(this).progress===MAX_LEVEL}updateBodyPos(){this.centerX=this.x+this.halfWidth,this.centerY=this.y+this.halfHeight,this.leftX=this.centerX-this.memberWidth,this.rightX=this.centerX+this.memberWidth}newPos(b,c,d){this.x+=internal(this).speedX,this.y+=internal(this).speedY,this.updateBodyPos(),b.forEach(g=>this.crashWith(g)),c.forEach(g=>this.crashWith(g)),this.hitContainer();for(var f=0;f<=d.length;f++){const g=d[f];if(g&&this.crashWith(g))return g}return this.updateBodyPos(),null}hitContainer(){const b=this.container.canvas.height-this.height,c=this.container.canvas.width-this.width;0>=this.y?this.y=0:this.y>=b&&(this.y=b),0>=this.x?this.x=0:this.x>=c&&(this.x=c)}crashWith(b){const c=0.5*(this.width+b.width),d=0.5*(this.height+b.height),f=this.centerX-b.centerX,g=this.centerY-b.centerY;if(Math.abs(f)<=c&&Math.abs(g)<=d){const j=c*g,k=d*f;return j>k?j>-k?this.y=b.y+b.height:this.x=b.x-this.width:j>-k?this.x=b.x+b.width:this.y=b.y-this.height,!0}return!1}isDead(){return internal(this).dead}update(){switch(this.ctx.strokeStyle='#000',this.ctx.fillStyle='#000',this.ctx.beginPath(),this.ctx.arc(this.centerX,this.y+this.margin+this.headSize,this.headSize,0,2*Math.PI,!0),this.ctx.fill(),this.ctx.beginPath(),this.ctx.moveTo(this.centerX,this.y+this.margin+this.headMargin),this.ctx.lineTo(this.centerX,this.y+this.margin+this.headMargin+this.bodySize),this.ctx.stroke(),this.ctx.beginPath(),this.ctx.moveTo(this.centerX,this.y+this.margin+this.headMargin),this.ctx.lineTo(this.leftX,this.y+this.margin+this.headMargin+this.memberSize),this.ctx.moveTo(this.centerX,this.y+this.margin+this.headMargin),this.ctx.lineTo(this.rightX,this.y+this.margin+this.headMargin+this.memberSize),this.ctx.stroke(),this.ctx.beginPath(),this.ctx.moveTo(this.centerX,this.y+this.margin+this.headMargin+this.bodySize),this.ctx.lineTo(this.leftX,this.y+this.height),this.ctx.moveTo(this.centerX,this.y+this.margin+this.headMargin+this.bodySize),this.ctx.lineTo(this.rightX,this.y+this.height),this.ctx.stroke(),this.ctx.strokeStyle='#000',this.ctx.fillStyle='red',internal(this).direction){case DIR.LEFT:this.ctx.moveTo(this.x,this.centerY),this.ctx.lineTo(this.x+5,this.centerY+5),this.ctx.lineTo(this.x+5,this.centerY-5);break;case DIR.RIGHT:this.ctx.moveTo(this.x+this.width,this.centerY),this.ctx.lineTo(this.x+this.width-5,this.centerY+5),this.ctx.lineTo(this.x+this.width-5,this.centerY-5);break;case DIR.TOP:this.ctx.moveTo(this.centerX,this.y),this.ctx.lineTo(this.centerX-5,this.y+5),this.ctx.lineTo(this.centerX+5,this.y+5);break;case DIR.BOTTOM:this.ctx.moveTo(this.centerX,this.y+this.height),this.ctx.lineTo(this.centerX-5,this.y+this.height-5),this.ctx.lineTo(this.centerX+5,this.y+this.height-5);}this.ctx.fill()}}const LEVEL={EASY:{LOOT:80,WALL:20},MEDIUM:{LOOT:50,WALL:50},HARD:{LOOT:20,WALL:80}};class Difficulty{constructor(b){this.level=8<b?LEVEL.HARD:4<b?LEVEL.MEDIUM:LEVEL.EASY,this.progress=b}getLootChance(){return this.level.LOOT*(1-this.progress/MAX_PROGRESS)||1}getWallChance(){return this.level.WALL*(this.progress/MAX_PROGRESS)}}const MAX_HEIGHT=490,MAX_WIDTH=600,MAX_PROGRESS=12,mapWidth=20,TILE_HEIGHT=30,TILE_WIDTH=30;var container,maze,player,time,progress,metaPressed=!1,gameStarted=!1,gameOver=!1;const permanentWall=[],ores=[],exit=[],freeWalk=[],KEY={Z:90,Q:81,W:87,A:65,S:83,D:68,LEFT:37,UP:38,RIGHT:39,DOWN:40,SPACE:32,CTRL:17,SHIFT:16,ALT:18,ESC:27,TAB:9,E:69,META:91,ENTER:13},KEY_UP=[KEY.UP,KEY.W,KEY.Z,KEY.SPACE],KEY_DOWN=[KEY.DOWN,KEY.S],KEY_LEFT=[KEY.LEFT,KEY.A,KEY.Q],KEY_RIGHT=[KEY.RIGHT,KEY.D],KEY_ACTION=[KEY.E];function updateGameArea(){if(container.clear(),container.frameNo+=1,player.isDead()||player.progress>MAX_PROGRESS)return gameOver=!0,void(gameStarted=!1);time.text=`Time elapsed: ${Math.floor(container.frameNo/50)}`,time.update(),progress.text=`${player.progress===MAX_PROGRESS?'Last level':`Level: ${player.progress+1}`}`,progress.update(),permanentWall.forEach(c=>c.update()),ores.forEach(c=>c.update()),exit.forEach(c=>c.update());var b=player.newPos(permanentWall,ores,exit);b&&(player.endLevel(),generateLevel()),player.update()}function startGame(){container.start(),gameStarted=!0}function keyup({keyCode:b}){if(b===KEY.ENTER&&startGame(),gameStarted)if(KEY_UP.includes(b)||KEY_DOWN.includes(b))player.move(void 0,0);else if(KEY_LEFT.includes(b)||KEY_RIGHT.includes(b))player.move(0);else if(KEY_ACTION.includes(b)){const f=player.action(maze.map,mapWidth);if(f&&f.type===TILE_TYPE.ORE){var c=-1;const g=f.x*TILE_WIDTH,j=f.y*TILE_HEIGHT;for(var d=0;d<ores.length;d++){const k=ores[d];if(k.x===g&&k.y===j){c=d;break}}-1<c&&((0.05>random.next()||1===ores.length)&&(map[f.x+f.y*mapWidth]=Object.assign({},map[g+j*mapWidth],{type:TILE_TYPE.EXIT}),exit.push(new StarComponent({width:TILE_WIDTH,height:TILE_HEIGHT,x:g,y:j,container}))),ores.splice(c,1))}}}function keydown({keyCode:b}){gameStarted&&(KEY_UP.includes(b)?player.move(void 0,-5):KEY_DOWN.includes(b)?player.move(void 0,5):KEY_LEFT.includes(b)?player.move(-5):KEY_RIGHT.includes(b)&&player.move(5))}function generateLevel(){permanentWall.length=0,ores.length=0,freeWalk.length=0,exit.length=0,maze.startGenerate(new Difficulty(player?player.progress:0)),maze.map.forEach(({x:c,y:d,type:f})=>{f===TILE_TYPE.WALL?permanentWall.push(new WallComponent({width:TILE_WIDTH,height:TILE_HEIGHT,x:c*TILE_WIDTH,y:d*TILE_HEIGHT,container})):f===TILE_TYPE.ORE?ores.push(new OreComponent({width:TILE_WIDTH,height:TILE_HEIGHT,x:c*TILE_WIDTH,y:d*TILE_HEIGHT,container})):f===TILE_TYPE.EMPTY?freeWalk.push({x:c,y:d}):void 0});const b=freeWalk[random.nextRange(0,freeWalk.length)];player?player.setPosition(b):player=new Player({container,color:'red',x:b.x,y:b.y,width:TILE_WIDTH,height:TILE_HEIGHT})}document.addEventListener('DOMContentLoaded',function(){window.addEventListener('keydown',keydown,!1),window.addEventListener('keyup',keyup,!1),container={canvas:document.getElementById('container'),start:function(){container=this,this.reset(),this.context=this.canvas.getContext('2d'),this.frameNo=0,this.canvas.width=MAX_WIDTH,this.canvas.height=MAX_HEIGHT,time=new TextComponent({size:'30px',x:10,y:MAX_HEIGHT-10,container}),progress=new TextComponent({size:'30px',x:MAX_WIDTH-120,y:MAX_HEIGHT-10,container}),permanentWall.push(new ObjectComponent({width:2*MAX_WIDTH,height:2,x:-MAX_WIDTH/2,y:MAX_HEIGHT-40,container})),maze=new MazeGenerator(0,0,mapWidth,15,container),generateLevel(),this.interval=setInterval(updateGameArea,20)},clear:function(){this.context&&this.context.clearRect(0,0,this.canvas.width,this.canvas.height)},reset:function(){this.clear(),this.interval&&(clearInterval(this.interval),gameOver=!1),permanentWall.length=0}}});